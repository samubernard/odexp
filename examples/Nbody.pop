# N-body system

let N 3

# Parameters
par v0     1      {initial}
par mass   1e+09  {impl}

macro G 6.674e-11 # Gravitational constant in m^3 kg^-1 s^-2

# User-defined functions
fun normCube(x,y,z) = pow(x*x+y*y+z*z,1.5);
fun grav(numx,numxi,x,y,z,xi,yi,zi) = (numx == numxi) ? 0.0 : (numx-numxi)/normCube(x-xi,y-yi,z-zi);

# Particle-particle interactions
%C GRAVITY_X  -G*MU(mass)*grav(MY(x),OY(x),MY(x),MY(y),MY(z),OY(x),OY(y),OY(z))
%C GRAVITY_Y  -G*MU(mass)*grav(MY(y),OY(y),MY(x),MY(y),MY(z),OY(x),OY(y),OY(z))
%C GRAVITY_Z  -G*MU(mass)*grav(MY(z),OY(z),MY(x),MY(y),MY(z),OY(x),OY(y),OY(z))

# differential equations
dx/dt = vx 
dy/dt = vy
dz/dt = vz
dvx/dt = GRAVITY_X
dvy/dt = GRAVITY_Y
dvz/dt = GRAVITY_Z

# constants
# The size of each array should be at least _N_ the number of particles
const x_ic[] { 0.0, 1.0, 0.5 }
const y_ic[] { 0.0, 0.0, 0.8660254037844386 }
const z_ic[] { 0.0, 0.0, 0.0 }
const vx0[] { 0.1, 0.0, -.1 }
const vy0[] { 0.0, 0.1, 0.0 }
const vz0[] { 0.0, 0.0, 0.0 }

# Initial conditions
# Initial position and velocities are set from constants arrays
# ID is a macro for the particle id. 
# Initial velocities are scaled by a factor v0 (which is a modifiable parameter)
init x x_ic[ID]
init y y_ic[ID]
init z z_ic[ID]
init vx v0*vx0[ID]
init vy v0*vy0[ID]
init vz v0*vz0[ID]

TIMESPAN 0 20 

opt ps N
opt x x
opt y y
opt z z
opt step 1.1
opt res 401
opt hmin 0
opt h0  0.1
opt abstol 1e-08
opt reltol 1e-08
opt meth bsimp
opt popmode population
opt seed 3141592
opt reseed 1
